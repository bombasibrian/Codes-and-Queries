Total Leads Count = calculate(Count('Master list'[customer]),
USERELATIONSHIP('Dates Table'[Dates],'Master list'[created_date]))




Total Hours Worked = 
if(
    CALCULATE(FIRSTNONBLANK('T sheets data'[Hours Worked], 1), FILTER(ALL('T sheets data'), 'T sheets data'[Full Name] = 'Master list'[closer])) <> BLANK(),
    CALCULATE(FIRSTNONBLANK('T sheets data'[Hours Worked], 1), FILTER(ALL('T sheets data'), 'T sheets data'[Full Name] = 'Master list'[closer])),
if(
    CALCULATE(FIRSTNONBLANK('T sheets data'[Hours Worked], 1), FILTER(ALL('T sheets data'), 'T sheets data'[Full Name] = 'Master list'[closer2])) <> BLANK(),
    CALCULATE(FIRSTNONBLANK('T sheets data'[Hours Worked], 1), FILTER(ALL('T sheets data'), 'T sheets data'[Full Name] = 'Master list'[closer2])),
if(
    CALCULATE(FIRSTNONBLANK('T sheets data'[Hours Worked], 1), FILTER(ALL('T sheets data'), 'T sheets data'[Full Name] = 'Master list'[setter name])) <> BLANK(),
    CALCULATE(FIRSTNONBLANK('T sheets data'[Hours Worked], 1), FILTER(ALL('T sheets data'), 'T sheets data'[Full Name] = 'Master list'[setter name])),

    if(
    CALCULATE(FIRSTNONBLANK('T sheets data'[Hours Worked], 1), FILTER(ALL('T sheets data'), 'T sheets data'[Full Name] = 'Master list'[setter_2])) <> BLANK(),
    CALCULATE(FIRSTNONBLANK('T sheets data'[Hours Worked], 1), FILTER(ALL('T sheets data'), 'T sheets data'[Full Name] = 'Master list'[setter_2]))


) 
)
))


Hours worked = Table.TransformColumns(#"Added Custom3",{{"Hours Worked", Duration.TotalHours, type number}})

Full Name = 'Hired Setters'[First Name]& " " & 'Hired Setters'[Last Name]




Total Hours Worked = 
if(
    CALCULATE(FIRSTNONBLANK('Tsheets'[Total Hours], 1), FILTER(ALL('Tsheets'), 'Tsheets'[Full Name] = 'Customer work info'[setter_name])) <> BLANK(),
    CALCULATE(FIRSTNONBLANK('Tsheets'[Total Hours], 1), FILTER(ALL('Tsheets'), 'Tsheets'[Full Name] = 'Customer work info'[setter_name])))
    
    
    
Pre - Pipeline (FA) = 
calculate(counta('Master List'[sales_rep]),
'Master List'[fluent_approved_date] <> BLANK(),
FILTER('Calendar', 'Calendar'[Date] >= date(2022, 1, 1) && 'Calendar'[Date] <= DATE(2022, 6, 14)),
USERELATIONSHIP('Calendar'[Date],'Master List'[date_lead_submitted]))


Rush Comp Count = 
if(CONTAINSSTRING('Master List'[Rush Comp], "Rush Competition"), 1, 0)

Manager = 
if(
    CALCULATE(FIRSTNONBLANK('Valor and Dauntless info'[sales_manager], 1), FILTER(ALL('Valor and Dauntless info'), 'Valor and Dauntless info'[sales_rep]= 'Master List'[sales_rep])) <> BLANK(),
    CALCULATE(FIRSTNONBLANK('Valor and Dauntless info'[sales_manager], 1), FILTER(ALL('Valor and Dauntless info'), 'Valor and Dauntless info'[sales_rep] = 'Master List'[sales_rep]))
)

Test Lead Summation = 
CALCULATE(SUM('Customer work info'[Lead Count, new hire]), filter(ALLEXCEPT('Customer work info','Customer work info'[New hires]), 'Customer work info'[New hires] <> BLANK()))


let BulkReplace = (DataTable as table, FindReplaceTable as table, DataTableColumn as list) =>
    let
        //Convert the FindReplaceTable to a list using the Table.ToRows function
        //so we can reference the list with an index number
        FindReplaceList = Table.ToRows(FindReplaceTable),
        //Count number of rows in the FindReplaceTable to determine
        //how many iterations are needed
        Counter = Table.RowCount(FindReplaceTable),
        //Define a function to iterate over our list
        //with the Table.ReplaceValue function
        BulkReplaceValues = (DataTableTemp, n) =>
        let
            //Replace values using nth item in FindReplaceList
            ReplaceTable = Table.ReplaceValue(
                DataTableTemp,
                //replace null with empty string in nth item
                if FindReplaceList{n}{0} = null then "" else FindReplaceList{n}{0},
                if FindReplaceList{n}{1} = null then "" else FindReplaceList{n}{1},
                Replacer.ReplaceText,
                DataTableColumn
                )
        in
            //if we are not at the end of the FindReplaceList
            //then iterate through Table.ReplaceValue again
            if n = Counter - 1
                then ReplaceTable
                else @BulkReplaceValues(ReplaceTable, n + 1),
        //Evaluate the sub-function at the first row
        Output = BulkReplaceValues(DataTable, 0)  
    in
        Output
in
    BulkReplace

